---
- name: Install node and npm
  become: true
  hosts: databases
  tasks:
    - name: Update apt repo and cache
      apt: update_cache=yes force_apt_get=yes cache_valid_time=3600
    
    - name: Install node and npm
      apt:
        pkg:
          - nodejs
          - npm

- name: Deploy nodejs app
  become: true 
  hosts: databases
  # vars:
  #   - destination: /home/ansible
  #   - location: /home/ansible/playbooks/hello-node-app.tar.gz
  #   - app_path: /home/ansible/hello-node-app/
  vars_files: 
    - vars/node-vars.yml
  tasks:
    #- name: Copy the tar app file
      # copy: 
      #   src: /home/ansible/playbooks/hello-node-app.tar.gz 
      #   dest: /home/ansible/app.tar.gz 
    - name: Copy and Unpack the nodejs tar file
      unarchive:
        src: "{{location}}"
        # in here we should not put a folder that does not exist
        dest: "{{destination}}"
        # if this is not specified then ansible will copy locally and 
        # remote_src: yes
    - name: Install Dependencies
      npm:
        path: "{{app_path}}"
    - name: Start the application
    # this command blocks shell since node is not ran in the background
      command:
        chdir: "{{app_path}}"
        cmd: node index.js
    # to do so we add async and poll to do something like node index.js &
      async: 1000
      poll: 0
    - name: Checking App is running
    # note   that shell are NOT SECURED command is more secure
    # and to check if an app is running we can curl into a health endpoint to see if it's running or not
      shell: ps aux | grep node
    # creating a variable to save results  
      register: status
    # note that the result is a dictionary that contains multiple key we get to choose the one that
    # gives back the needs  
    - debug: msg={{status.stdout_lines}}
    # we can use the find module to find directories app etc dynamically instead of hardcoding the names
    - name: Find folder app 
      find:
        paths: /home/ansible
        pattern: "hello-node-*"
        file_type: directory
      register: find_result
    - debug: msg={{find_result}}

    - name: Check if node-app folder exists
      stat:
        path: /home/ansible/node-app
      register: stat_result
    - debug: msg={{stat_result}}
    # the shell and commande ansible run them everysingle time unlike modules in wich ansible have it's own way to
    # determine weither this was already launched or not
    # we then use conditionals 
    - name: Rename node app folder
      shell: mv {{find_result.files[0].path}} /home/ansible/node-app
      when: not stat_result.stat.exists
 

